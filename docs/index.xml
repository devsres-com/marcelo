<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://devsres.com/marcelo/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt</language>
    <lastBuildDate>Fri, 30 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://devsres.com/marcelo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Prometheus node exporter com TLS</title>
      <link>https://devsres.com/marcelo/blog/prometheus-node-exporter-tls/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/prometheus-node-exporter-tls/</guid>
      <description>Ah, Prometheus. O mundo &amp;ldquo;cloud-native&amp;rdquo; simplesmente adora.
Desde sua recepção pela CNCF em 2016 como primeiro projeto - após o Kubernetes - a ser incubado, a adesão e admiração tem sido crescente, a ponto de você encontrar issues como esta em projetos aleatórios na Internet:
 jnovack commented on Apr 1, 2018 I&amp;rsquo;m pretty sure Prometheus-compatible metrics exposure is almost a requirement in 2018 for project adoption.
 (Ps: o projeto em questão ainda não exporta métricas)</description>
    </item>
    
    <item>
      <title>De repente, CKA</title>
      <link>https://devsres.com/marcelo/blog/suddenly-cka/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/suddenly-cka/</guid>
      <description>Com alguns anos de atraso&amp;hellip;
A história com Kubernetes e seus colegas Cloud Native vem de 2016 quando a área em que estava acabou e a equipe inteira seria &amp;ldquo;despejada&amp;rdquo; em uma área qualquer. Um grupo dissidente da empresa estava procurando almas perdidas e desenganadas para participar de um projeto esquisito, que, segundo eles, seria altamente diferenciado.
Nenhuma grande empresa de tecnologia jamais dedicaria esforço montando uma infraestrutura alternativa com um software de nome estranho que pouca gente do corpo gerencial sequer ouviu falar, ainda mais mantido por uma &amp;ldquo;skeleton crew&amp;rdquo; de poucos nomes desconihecidos.</description>
    </item>
    
    <item>
      <title>Linux, contêineres e descritores de arquivos</title>
      <link>https://devsres.com/marcelo/blog/linux-containers-and-file-descriptors/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/linux-containers-and-file-descriptors/</guid>
      <description>O mundo mudou, e tudo hoje é &amp;ldquo;software engineer&amp;rdquo; e containers em todas as direções. X as a Code, &amp;ldquo;abordagem dev para tudo&amp;rdquo;, &amp;ldquo;o que um dev faria?&amp;rdquo;, e assim vai. E como fica o profissional de infraestrutura? Aquele cara que hoje é conhecido como Ops puro sangue, e que foi basicamente substituído por desenvolvedores que entendem um pouco mais de operação que os outros?
Eu sou um desses caras. Um Guru Linux das antigas, dos tempos do Slackware, dependency chain download e das configurações de X que queimavam monitores.</description>
    </item>
    
    <item>
      <title>Calicoctl, TLS e gestão de certificados</title>
      <link>https://devsres.com/marcelo/blog/calicoctl-stuck/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/calicoctl-stuck/</guid>
      <description>Estava precisando configurar algumas GlobalNetworkPolicies em um cluster Kubernetes; para isso, é necessário intervir diretamente no Calico, pois o Kubernetes ainda não conta com objetos de Networkpolicies que não sejam &amp;lsquo;namespaced&amp;rsquo;.
Obviamente, usamos &amp;lsquo;backend&amp;rsquo; ETCD: por que simplificaríamos tudo usando CRDs no próprio Kubernetes, não é? Deixamos isso para os amadores!
(PS: fazemos assim porque somos tão pioneiros em usar tecnologias &amp;lsquo;bleeding edge&amp;rsquo; que, à época da implantação, usar Kubernetes como backend sequer era uma opção - sim, nós somos &amp;lsquo;that old school&amp;rsquo;!</description>
    </item>
    
    <item>
      <title>Cuidado com terraform import</title>
      <link>https://devsres.com/marcelo/blog/terraform-import-watch-out/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/terraform-import-watch-out/</guid>
      <description>(Nota: eu tenho tentado produzir conteúdo de qualidade seguindo uma linha de raciocínio com começo, meio e fim, com valor histórico e altamente apreciável. Com isso, meu último post foi mês passado e eu tenho mais de 30 drafts a concluir. Portanto, vou tornar isso aqui um braindump de conteúdos aleatórios que eu julgar relevante. Foi mal!)
 Quem não adora Terraform?
Basta escrever meia dúzia de arquivos que algum programa magicamente interpreta tudo e cria coisas mágicas para você.</description>
    </item>
    
    <item>
      <title>Por que Docker?</title>
      <link>https://devsres.com/marcelo/blog/why-docker/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/why-docker/</guid>
      <description>Em conversas - principalmente com pessoas dos dois extremos do espectro de idade - sobre nosso glorioso mercado de TI vez por outra surge este questionamento: por que usar Docker?
Eu tendo a reclamação, em especial de estudantes e do pessoal novo: em casa, sem um arsenal de ferramentas de CI/CD implantadas por terceiros, parece uma incrível bobagem e perda de tempo. Dockerfile, rede virtual, putz, pra que complicar, se eu posso rodar tudo na minha máquina sem problemas?</description>
    </item>
    
    <item>
      <title>Sobre</title>
      <link>https://devsres.com/marcelo/about/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/about/</guid>
      <description>O fundador da DevSREs Network Initiative, Marcelo Andrade, é entusiasta do universo Linux e software livre desde a primeira instalação do saudoso Conectiva Parolin em 1997.
Ao longo dos anos, transitou profissionalmente entre os mais diversos nomes comumente atribuídos aos profissionais de TI que não trabalham diretamente com desenvolvimento de software: sysop, sysadmin, administrador de redes, analista de redes, analista de infraestrutura, analista de suporte, engenheiro de soluções&amp;hellip; Até se auto instituir o título de Site Reliability Engineer, ou engenheiro de confiabilidade (de sites?</description>
    </item>
    
    <item>
      <title>Kubernetes: por onde começar</title>
      <link>https://devsres.com/marcelo/blog/kubernetes-where-to-start/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/kubernetes-where-to-start/</guid>
      <description>No último ano, aqui em Recife, tive a oportunidade de participar (e palestrar!) em alguns eventos. Em comum, havia o fato de muito de seus conteúdos - se não integralmente - estarem relacionados ao Kubernetes.
Nas duas oportunidade em que fiz apresentações, entrei em detalhes sobre:
 o desafio de usar o objeto Ingress - que, até a recém-lançada versão 1.19, ainda era beta, embora exista desde a versão 1.1; uma nova abordagem de como fazer a gerência de um cluster e a entrega contínua de aplicações: GitOps;  Embora eu sempre procure abordar o assunto de uma forma que não seja absolutamente incompreensível para quem não tenha qualquer tipo de contato com Kubernetes, em todos os eventos, me deparo com uma realidade: a de que existe muita gente interessada sobre Kubernetes, mas com bastante dificuldade de se introduzir a esta tecnologia.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://devsres.com/marcelo/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/contact/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>