<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://devsres.com/marcelo/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt</language>
    <lastBuildDate>Tue, 13 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://devsres.com/marcelo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Calico IPPool dedicado para Infraestrutura</title>
      <link>https://devsres.com/marcelo/blog/surviving-with-terraforming-on-aws-1/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/surviving-with-terraforming-on-aws-1/</guid>
      <description>Setup: Kubernetes com Calico CNI.
Você tem o IPPool &amp;ldquo;oficial&amp;rdquo; para os pods de workload dos seus tenants, limitado porque conta com IPs válidos na rede para auditoria e que não sofrem NAT (natOutgoing=false) em suas comunicações com serviços dentro ou fora do cluster.
Ok.
Mas temos alguns pods &amp;ldquo;de infraestrutura&amp;rdquo;. Esses pods executam nos mesmos hosts de workload normal, mas precisam de acesso diferenciado e não queremos desperdiçar IPs válidos com eles.</description>
    </item>
    
    <item>
      <title>Sobrevivendo com Terraform na AWS - parte 1</title>
      <link>https://devsres.com/marcelo/blog/calico-cni-ippool-infrastructure/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/calico-cni-ippool-infrastructure/</guid>
      <description>Sobrevivendo com Terraform na AWS Então, um pássaro preto gigante te jogou em um terreno desconhecido e inóspito conhecido como AWS e a única coisa que você tem é um terminal Linux e o binário terraform da Hashicorp. O que você faz?
(Ou talvez não tenha sido um pássaro preto; talvez tenha sido o seu gerente de TI que te incumbiu de construir tudo que será necessário para o início das atividades na AWS.</description>
    </item>
    
    <item>
      <title>Kubernetes on-premises - parte 4</title>
      <link>https://devsres.com/marcelo/blog/kubernetes-on-prem-4/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/kubernetes-on-prem-4/</guid>
      <description>Outros capítulos da série Kubernetes on-premises:
 Kubernetes on-prem - parte 1: Introdução. Kubernetes on-prem - parte 2: Redes em Kubernetes - CNI e Calico. Kubernetes on-prem - parte 3: Tráfego de entrada em clusters Kubernetes  Como criar clusters Kubernetes Disclaimer: provavelmente este é o capítulo mais dispensável da série porque é o que eu tenho menos coisas relevantes para compartilhar. De qualquer forma, ele precisava ser escrito!
Até agora, abordei diversas considerações relevantes que devem ser feitas antes de se instalar um cluster Kubernetes - e, em particular, pontos que particularmente são mais dolorosos para quem não está operando em Cloud Providers.</description>
    </item>
    
    <item>
      <title>Kubernetes on-premises - parte 3</title>
      <link>https://devsres.com/marcelo/blog/kubernetes-on-prem-3/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/kubernetes-on-prem-3/</guid>
      <description>Outros capítulos da série Kubernetes on-premises:
 Kubernetes on-prem - parte 1: Introdução. Kubernetes on-prem - parte 2: Redes em Kubernetes - CNI e Calico.  Clusters Kubernetes: modelo de tráfego auto-contido Na parte 2 da série &amp;ldquo;Kubernetes on-premises&amp;rdquo;, abordei, de maneira bastante superficial, sobre o fato de que o Kubernetes gosta da ideia de abstrair certas implementações, como a execução de contêineres, provisionamento de volumes para armazenamento persistente e especialmente redes.</description>
    </item>
    
    <item>
      <title>Kubernetes on-premises - parte 2</title>
      <link>https://devsres.com/marcelo/blog/kubernetes-on-prem-2/</link>
      <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/kubernetes-on-prem-2/</guid>
      <description>Um pouco atrasado pelos diversos &amp;ldquo;detours&amp;rdquo;, mas seguimos com a continuação da Parte 1!
 Kubernetes on-prem - parte 1: se você perdeu o initial rambling!  Redes no Kubernetes: componentes plugáveis A primeira regra sobre redes no Kubernetes é que você não fala sobre redes no Kubernetes.
Agora sério: o Kubernetes, conceitualmente, descreve vários aspectos de como deve ocorrer a comunicação entre seus componentes. Mas ele não descreve o como implementar; ele &amp;ldquo;terceiriza&amp;rdquo; essas linhas gerais para outros projetos.</description>
    </item>
    
    <item>
      <title>GOVC</title>
      <link>https://devsres.com/marcelo/blog/exploring-vmware-with-govc/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/exploring-vmware-with-govc/</guid>
      <description>O projeto govmomi oferece uma biblioteca em Go Para interação com as APIs VMWare Vsphere (ESXi ou vCenter). O programa govc é o binário que te permite executar coisas na linha de comando.
Eu nunca implantei VMWare do zero; conheço um emaranhado de conceitos usando a técnica que todo ultrageneralista usa: sair aprendendo uma série de coisas desconexas sobre o objeto de estudo que são o suficiente para desempenhar determinada tarefa, torcendo para que, algum dia, eu possa voltar àquele assunto e completar o que falta.</description>
    </item>
    
    <item>
      <title>Ceph CSI no Kubernetes</title>
      <link>https://devsres.com/marcelo/blog/ceph-csi-on-kubernetes/</link>
      <pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/ceph-csi-on-kubernetes/</guid>
      <description>Aqui vai o relato fresquinho da experiência de um dos meus trabalhos mais recentes: o deploy de plugins CSI para o provisionamento automático de filesystems CephFS e volumes RBD.
Uma nota infeliz: o cluster Ceph foi instalado e é mantido por outras pessoas, e eu não tenho qualquer tipo de acesso. Então o relato vai ser incompleto, faltando os procedimentos do lado &amp;ldquo;de lá&amp;rdquo;. Se você está esperando aqui ideias para apoiar a instalação e configuração de clusters Ceph ou uso de soluções como o Rook, este não é o texto para você.</description>
    </item>
    
    <item>
      <title>Kubernetes on-premises - parte 1</title>
      <link>https://devsres.com/marcelo/blog/kubernetes-on-prem-1/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/kubernetes-on-prem-1/</guid>
      <description>Recentemente, participei do Kubicast, em que pude desabafar um pouco com o João Brito da Getup sobre como é criar e um cluster Kubernetes em um ambiente tecnologicamente inóspito e oposto ao universo super estável, escalável e redundante dos cloud providers.
Recebi algumas mensagens de alguns poucos valentes que precisam trilhar esse caminho. Mas, antes, vou ressaltar uma coisa importante: neste primeiro momento, eu vou abordar a história do que foi feito e compartilhar a experiência.</description>
    </item>
    
    <item>
      <title>Calico, Linux e tabelas de rota</title>
      <link>https://devsres.com/marcelo/blog/calico-and-route-tables/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/calico-and-route-tables/</guid>
      <description>Mudança no ambiente! Atualização de cada um dos 32 componentes do cluster Kubernetes. Tranquilo! O que pode dar errado?
Após a estabilização do ambiente, começamos a atualização dos servidores que atuam como balanceadores de carga de entrada para o cluster - aqueles que executam o Haproxy Ingress Controller do dev hero João Morais.
A métrica de erros começa a estourar do nada; e o melhor, em tese, não estamos recebendo nenhum erro - algo quebrou, e algo completamente desconhecido.</description>
    </item>
    
    <item>
      <title>Prometheus node exporter com TLS</title>
      <link>https://devsres.com/marcelo/blog/prometheus-node-exporter-tls/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/prometheus-node-exporter-tls/</guid>
      <description>Ah, Prometheus. O mundo &amp;ldquo;cloud-native&amp;rdquo; simplesmente adora.
Desde sua recepção pela CNCF em 2016 como primeiro projeto - após o Kubernetes - a ser incubado, a adesão e admiração tem sido crescente, a ponto de você encontrar issues como esta em projetos aleatórios na Internet:
 jnovack commented on Apr 1, 2018 I&amp;rsquo;m pretty sure Prometheus-compatible metrics exposure is almost a requirement in 2018 for project adoption.
 (Ps: o projeto em questão ainda não exporta métricas)</description>
    </item>
    
    <item>
      <title>De repente, CKA</title>
      <link>https://devsres.com/marcelo/blog/suddenly-cka/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/suddenly-cka/</guid>
      <description>Com alguns anos de atraso&amp;hellip;
A história com Kubernetes e seus colegas Cloud Native vem de 2016 quando a área em que estava acabou e a equipe inteira seria &amp;ldquo;despejada&amp;rdquo; em uma área qualquer. Um grupo dissidente da empresa estava procurando almas perdidas e desenganadas para participar de um projeto esquisito, que, segundo eles, seria altamente diferenciado.
Nenhuma grande empresa de tecnologia jamais dedicaria esforço montando uma infraestrutura alternativa com um software de nome estranho que pouca gente do corpo gerencial sequer ouviu falar, ainda mais mantido por uma &amp;ldquo;skeleton crew&amp;rdquo; de poucos nomes desconihecidos.</description>
    </item>
    
    <item>
      <title>Linux, contêineres e descritores de arquivos</title>
      <link>https://devsres.com/marcelo/blog/linux-containers-and-file-descriptors/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/linux-containers-and-file-descriptors/</guid>
      <description>O mundo mudou, e tudo hoje é &amp;ldquo;software engineer&amp;rdquo; e containers em todas as direções. X as a Code, &amp;ldquo;abordagem dev para tudo&amp;rdquo;, &amp;ldquo;o que um dev faria?&amp;rdquo;, e assim vai. E como fica o profissional de infraestrutura? Aquele cara que hoje é conhecido como Ops puro sangue, e que foi basicamente substituído por desenvolvedores que entendem um pouco mais de operação que os outros?
Eu sou um desses caras. Um Guru Linux das antigas, dos tempos do Slackware, dependency chain download e das configurações de X que queimavam monitores.</description>
    </item>
    
    <item>
      <title>Calicoctl, TLS e gestão de certificados</title>
      <link>https://devsres.com/marcelo/blog/calicoctl-stuck/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/calicoctl-stuck/</guid>
      <description>Estava precisando configurar algumas GlobalNetworkPolicies em um cluster Kubernetes; para isso, é necessário intervir diretamente no Calico, pois o Kubernetes ainda não conta com objetos de Networkpolicies que não sejam &amp;lsquo;namespaced&amp;rsquo;.
Obviamente, usamos &amp;lsquo;backend&amp;rsquo; ETCD: por que simplificaríamos tudo usando CRDs no próprio Kubernetes, não é? Deixamos isso para os amadores!
(PS: fazemos assim porque somos tão pioneiros em usar tecnologias &amp;lsquo;bleeding edge&amp;rsquo; que, à época da implantação, usar Kubernetes como backend sequer era uma opção - sim, nós somos &amp;lsquo;that old school&amp;rsquo;!</description>
    </item>
    
    <item>
      <title>Cuidado com terraform import</title>
      <link>https://devsres.com/marcelo/blog/terraform-import-watch-out/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/terraform-import-watch-out/</guid>
      <description>(Nota: eu tenho tentado produzir conteúdo de qualidade seguindo uma linha de raciocínio com começo, meio e fim, com valor histórico e altamente apreciável. Com isso, meu último post foi mês passado e eu tenho mais de 30 drafts a concluir. Portanto, vou tornar isso aqui um braindump de conteúdos aleatórios que eu julgar relevante. Foi mal!)
 Quem não adora Terraform?
Basta escrever meia dúzia de arquivos que algum programa magicamente interpreta tudo e cria coisas mágicas para você.</description>
    </item>
    
    <item>
      <title>Por que Docker?</title>
      <link>https://devsres.com/marcelo/blog/why-docker/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/why-docker/</guid>
      <description>Em conversas - principalmente com pessoas dos dois extremos do espectro de idade - sobre nosso glorioso mercado de TI vez por outra surge este questionamento: por que usar Docker?
Eu tendo a reclamação, em especial de estudantes e do pessoal novo: em casa, sem um arsenal de ferramentas de CI/CD implantadas por terceiros, parece uma incrível bobagem e perda de tempo. Dockerfile, rede virtual, putz, pra que complicar, se eu posso rodar tudo na minha máquina sem problemas?</description>
    </item>
    
    <item>
      <title>Sobre</title>
      <link>https://devsres.com/marcelo/about/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/about/</guid>
      <description>O fundador da DevSREs Network Initiative, Marcelo Andrade, é entusiasta do universo Linux e software livre desde a primeira instalação do saudoso Conectiva Parolin em 1997.
Ao longo dos anos, transitou profissionalmente entre os mais diversos nomes comumente atribuídos aos profissionais de TI que não trabalham diretamente com desenvolvimento de software: sysop, sysadmin, administrador de redes, analista de redes, analista de infraestrutura, analista de suporte, engenheiro de soluções&amp;hellip; Até se auto instituir o título de Site Reliability Engineer, ou engenheiro de confiabilidade (de sites?</description>
    </item>
    
    <item>
      <title>Kubernetes: por onde começar</title>
      <link>https://devsres.com/marcelo/blog/kubernetes-where-to-start/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/blog/kubernetes-where-to-start/</guid>
      <description>No último ano, aqui em Recife, tive a oportunidade de participar (e palestrar!) em alguns eventos. Em comum, havia o fato de muito de seus conteúdos - se não integralmente - estarem relacionados ao Kubernetes.
Nas duas oportunidade em que fiz apresentações, entrei em detalhes sobre:
 o desafio de usar o objeto Ingress - que, até a recém-lançada versão 1.19, ainda era beta, embora exista desde a versão 1.1; uma nova abordagem de como fazer a gerência de um cluster e a entrega contínua de aplicações: GitOps;  Embora eu sempre procure abordar o assunto de uma forma que não seja absolutamente incompreensível para quem não tenha qualquer tipo de contato com Kubernetes, em todos os eventos, me deparo com uma realidade: a de que existe muita gente interessada sobre Kubernetes, mas com bastante dificuldade de se introduzir a esta tecnologia.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://devsres.com/marcelo/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devsres.com/marcelo/contact/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
